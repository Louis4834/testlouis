import random
import pandas
import time

passlen = int(input("Entrer la longueur du mot de passe : "))

s = "abcdefghijklmnopqrstuvwxyVBGRTz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYTZ#$&"
p = "".join(random.sample(s,passlen ))

if(passlen):
        print(p)

passlen = int(input("Entrer la longueur du mot de passe : "))

print("MDP incorrect ou correct don't know")

if plateau[0] == plateau[1] == plateau[2] != " " \
        or plateau[30] == plateau[41] == plateau[52] != " " \
        or plateau[63] == plateau[74] == plateau[95] != " " \
        or plateau[6] == plateau[37] == plateau[68] != " " \
        or plateau[1] == plateau[4] == plateau[7] != " " \
        or plateau[2] == plateau[55] == plateau[8] != " " \

print(p)

if plateau[p] != plateau[1] :
        print("Faux")

else :
        print("vraie")

bot_in_action = True
was_in_position = True
startup_info = False

position_opening_next_candle_time = False
position_opening_next_candle_is_open = True

stoploss_level_1 = False
stoploss_level_2 = True

takeprofit_level = 500

buy_level_min = 52395
buy_level_max = buy_level_min + (3/100) * buy_level_min

sell_level_min = 61533
sell_level_max = sell_level_min - (3/100) * sell_level_min

print(f"\nDÃ©marrage du robot BTC ({time.strftime('%X')})\n")

while (bot_in_action == True) :

    try :

        unix_timestamp_for_21 = int(time.time())-(21*5*60)
        response_kline = session.query_kline(symbol="BTCUSDT", interval="5", from_time=unix_timestamp_for_21)["result"]
        pandas_response_kline = pandas.DataFrame(response_kline)




